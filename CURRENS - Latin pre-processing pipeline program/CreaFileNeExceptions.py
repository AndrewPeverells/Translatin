import string

ne_exceptions = [
    "absone",
    "acharne",
    "acrisione",
    "acumine",
    "adhucine",
    "adsuetudine",
    "aeetine",
    "aeschynomene",
    "aesone",
    "agamemnone",
    "agmine",
    "albane",
    "alcyone",
    "almone",
    "alsine",
    "amasene",
    "ambitione",
    "amne",
    "amoene",
    "amymone",
    "anadyomene",
    "andrachne",
    "anemone",
    "aniene",
    "anne",
    "antigone",
    "aparine",
    "apolline",
    "aquilone",
    "arachne",
    "arne",
    "arundine",
    "ascanione",
    "asiane",
    "asine",
    "aspargine",
    "babylone",
    "barine",
    "bellone",
    "belone",
    "bene",
    "benigne",
    "bipenne",
    "bizone",
    "bone",
    "bubone",
    "bulbine",
    "cacumine",
    "caligine",
    "calymne",
    "cane",
    "carcine",
    "cardine",
    "carmine",
    "catacecaumene",
    "catone",
    "cerne",
    "certamine",
    "chalbane",
    "chamaedaphne",
    "chamaemyrsine",
    "chaone",
    "chione",
    "christiane",
    "clymene",
    "cognomine",
    "commagene",
    "commune",
    "compone",
    "concinne",
    "condicione",
    "condigne",
    "cone",
    "confine",
    "consone",
    "corone",
    "crastine",
    "crepidine",
    "crimine",
    "crine",
    "culmine",
    "cupidine",
    "cyane",
    "cydne",
    "cyllene",
    "cyrene",
    "daphne",
    "depone",
    "desine",
    "dicione",
    "digne",
    "dine",
    "dione",
    "discrimine",
    "diutine",
    "dracone",
    "dulcedine",
    "elatine",
    "elephantine",
    "elleborine",
    "epidamne",
    "erigone",
    "euadne",
    "euphrone",
    "euphrosyne",
    "examine",
    "faune",
    "femine",
    "feminine",
    "ferrugine",
    "fine",
    "flamine",
    "flumine",
    "formidine",
    "fragmine",
    "fraterne",
    "fulmine",
    "fune",
    "germane",
    "germine",
    "geryone",
    "gorgone",
    "gramine",
    "grandine",
    "haecine",
    "halcyone",
    "hammone",
    "harundine",
    "hedone",
    "helene",
    "helxine",
    "hermione",
    "heroine",
    "hesione",
    "hicine",
    "hicne",
    "hierabotane",
    "hippocrene",
    "hispane",
    "hodierne",
    "homine",
    "hominesne",
    "hortamine",
    "hucine",
    "humane",
    "hunccine",
    "huncine",
    "iasione",
    "iasone",
    "igne",
    "imagine",
    "immane",
    "immune",
    "impoene",
    "impone",
    "importune",
    "impune",
    "inane",
    "inconcinne",
    "indagine",
    "indigne",
    "inferne",
    "inguine",
    "inhumane",
    "inpone",
    "inpune",
    "insane",
    "insigne",
    "inurbane",
    "ismene",
    "istucine",
    "itone",
    "iuuene",
    "karthagine",
    "labiene",
    "lacedaemone",
    "lanugine",
    "latine",
    "legione",
    "lene",
    "lenone",
    "libidine",
    "limine",
    "limone",
    "lumine",
    "magne",
    "maligne",
    "mane",
    "margine",
    "marone",
    "masculine",
    "matutine",
    "medicamine",
    "melpomene",
    "memnone",
    "mesene",
    "messene",
    "misene",
    "mitylene",
    "mnemosyne",
    "moderamine",
    "moene",
    "mone",
    "mortaline",
    "mucrone",
    "munimine",
    "myrmidone",
    "mytilene",
    "ne",
    "necne",
    "neptune",
    "nequene",
    "nerine",
    "nocturne",
    "nomine",
    "nonne",
    "nullane",
    "numine",
    "nuncine",
    "nyctimene",
    "obscene",
    "obsidione",
    "oenone",
    "omine",
    "omne",
    "oppone",
    "opportune",
    "ordine",
    "origine",
    "orphne",
    "oxymyrsine",
    "paene",
    "pallene",
    "pane",
    "paraetacene",
    "patalene",
    "pectine",
    "pelagine",
    "pellene",
    "pene",
    "perbene",
    "perbenigne",
    "peremne",
    "perenne",
    "perindigne",
    "peropportune",
    "persephone",
    "phryne",
    "pirene",
    "pitane",
    "plane",
    "pleione",
    "plene",
    "pone",
    "praefiscine",
    "prasiane",
    "priene",
    "priuigne",
    "procne",
    "proditione",
    "progne",
    "prone",
    "propone",
    "pulmone",
    "pylene",
    "pyrene",
    "pythone",
    "ratione",
    "regione",
    "religione",
    "remane",
    "retine",
    "rhene",
    "rhododaphne",
    "robigine",
    "romane",
    "roxane",
    "rubigine",
    "sabine",
    "sane",
    "sanguine",
    "saturne",
    "seditione",
    "segne",
    "selene",
    "semine",
    "semiplene",
    "sene",
    "sepone",
    "serene",
    "sermone",
    "serrane",
    "siccine",
    "sicine",
    "sine",
    "sithone",
    "solane",
    "sollemne",
    "somne",
    "sophene",
    "sperne",
    "spiramine",
    "stamine",
    "statione",
    "stephane",
    "sterne",
    "stramine",
    "subpone",
    "subtegmine",
    "subtemine",
    "sulmone",
    "superne",
    "supine",
    "suppone",
    "susiane",
    "syene",
    "tantane",
    "tantine",
    "taprobane",
    "tegmine",
    "telamone",
    "temne",
    "temone",
    "tene",
    "testudine",
    "theophane",
    "therone",
    "thyone",
    "tiberine",
    "tibicine",
    "tiburne",
    "tirone",
    "tisiphone",
    "torone",
    "transitione",
    "troiane",
    "turbine",
    "turne",
    "tyrrhene",
    "uane",
    "uelamine",
    "uertigine",
    "uesane",
    "uimine",
    "uirgine",
    "umbone",
    "unguine",
    "uolumine",
    "uoragine",
    "urbane",
    "uulcane",
    "zone",
]

neexceptions_dict = {  
    'a' : [],
    'b' : [],
    'c' : [],
    'd' : [],
    'e' : [],
    'f' : [],
    'g' : [],
    'h' : [],
    'i' : [],
    'j' : [],
    'k' : [],
    'l' : [],
    'm' : [],
    'n' : [],
    'o' : [],
    'p' : [],
    'q' : [],
    'r' : [],
    's' : [],
    't' : [],
    'u' : [],
    'v' : [],
    'w' : [],
    'x' : [],
    'y' : [],
    'z' : []
}
listaparoleperlettera = []


for letter in string.ascii_lowercase:
    print(listaparoleperlettera)
    for word in ne_exceptions:
        if word[0] == letter:
            listaparoleperlettera.append(word)
    print(listaparoleperlettera)
    neexceptions_dict[letter].extend(listaparoleperlettera)
    listaparoleperlettera=listaparoleperlettera.clear()
    listaparoleperlettera = []

print(neexceptions_dict)

for key, value in neexceptions_dict.items():
  filename = str('./cartellaneexceptions/nelettera' + str(key) + '.txt')
  with open(filename, "w") as f:
    for v in value:
      f.write(v + "\n")